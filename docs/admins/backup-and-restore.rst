:og:description: As with any production system, system administrators should configure backups for Apiary to ensure the app can be recovered in the event of a system failure.

.. vale Google.Passive = NO
.. vale Google.Will = NO
.. vale write-good.E-Prime = NO
.. vale write-good.Passive = NO

Backup and restore
==================

As with any production system, system administrators should configure backups for Apiary to ensure the app can be recovered in the event of a system failure.

Apiary maintains state in two primary locations:

- The MySQL database contains most information that's displayed in the web UI
- The ``/storage/app/`` directory contains :ref:`uploaded resumes <Export resumes>` and DocuSign documents for both :ref:`membership agreements <Membership agreements>` and travel

Both the database and the storage directory must be backed up to fully restore an environment.

Create a backup
---------------

It's not necessary to stop the app during backups, but you may optionally do so to ensure consistency.

Disk storage
~~~~~~~~~~~~

The ``/storage/app/`` directory should be copied to a secure location.
If running under Nomad, this directory is within a Docker volume.

Some subdirectories can be excluded to save space:

- ``/storage/app/nova-exports/`` contains exports generated within Nova
- ``/storage/app/dompdf`` is no longer used

Database
~~~~~~~~

The MySQL database can be dumped using the ``mysqldump`` command.
This will generate a SQL script that can be executed later to reproduce the state of the database.
**Note that if you back up more than one database in a single invocation, the databases will be combined into a single script.**

Some tables can be excluded to save space:

- ``action_events`` is a log of actions taken within Nova
- ``attendance_exports`` is no longer used
- ``failed_jobs`` contains failed job information
- ``jobs`` is no longer used
- ``notification_templates`` is no longer used
- ``nova_notifications`` contains notifications shown within the Nova notifications panel
- ``oauth_refresh_tokens`` contains OAuth refresh tokens
- ``oauth_access_tokens`` contains OAuth access tokens
- ``recruiting_campaign_recipients`` is no longer used
- ``recruiting_campaigns`` is no longer used
- ``recruiting_responses`` is no longer used
- ``recruiting_visits`` is no longer used
- ``remote_attendance_links`` contains time-limited remote attendance links
- ``webhook_calls`` contains inbound webhook requests from vendors - Square, DocuSign, Postmark

Restore from a backup
---------------------

1. You must have a running, empty instance that's configured and working. See :doc:`/admins/deployment` for instructions.
2. Stop the Nomad job, or otherwise prevent user access to the app for the duration of the restore process.
3. Restore the contents of the ``/storage/app/`` directory.
4. Run the script generated by ``mysqldump`` against the target database. **Note that if you backed up more than one database in a single invocation, the databases were combined into a single script, and you must trim the file to just the statements you want to execute.**
5. Start the Nomad job.
6. Run ``php artisan scout:import-all`` to index the data in Meilisearch.
