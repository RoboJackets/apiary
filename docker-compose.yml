---
services:
  apiary:
    build:
      context: .
      target: backend-uncompressed
      secrets:
        - composer_auth
    ports:
      - "8000:8000"
    environment:
      APP_NAME: Apiary Local
      APP_ENV: local
      APP_DEBUG: true
      APP_LOG_LEVEL: debug
      APP_URL: http://127.0.0.1:8000
      LOG_CHANNEL: stderr
      DB_CONNECTION: sqlite
      DB_SQLITE_LOCATION: /app/storage/quickstart.sqlite
      BROADCAST_CONNECTION: log
      CACHE_STORE: array
      SESSION_DRIVER: file
      QUEUE_DRIVER: sync
      CAS_MASQUERADE: atesting3
      CAS_MASQUERADE_gtGTID: 901234567
      CAS_MASQUERADE_email_primary: developers@robojackets.org
      CAS_MASQUERADE_givenName: Apiary
      CAS_MASQUERADE_sn: Testing
      CAS_MASQUERADE_authnContextClass: mfa-duo
      CAS_MASQUERADE_eduPersonPrimaryAffiliation: student
      CAS_MASQUERADE_eduPersonScopedAffiliation: student@gt
      CAS_HOSTNAME: sso-test.gatech.edu
      CAS_REAL_HOSTS: sso-test.gatech.edu
      CAS_CLIENT_SERVICE: http://127.0.0.1:8000
      CAS_LOGOUT_URL: http://127.0.0.1:8000
      JEDI_HOST: null
      JEDI_TOKEN: null
      PASSPORT_PUBLIC_KEY: /app/storage/oauth-public.key
      PASSPORT_PRIVATE_KEY: /app/storage/oauth-private.key
      SCOUT_DRIVER: collection
      MAIL_MAILER: log
      BUZZAPI_HOST: apiary-sandbox.robojackets.org
      BUZZAPI_APP_ID: mock
      BUZZAPI_APP_PASSWORD: mock
      FEATURE_DOCUSIGN_MEMBERSHIP_AGREEMENT: false
      FEATURE_ENABLE_WHITEPAGES: false
      FEATURE_SANDBOX_MODE: true
      SANDBOX_USERS: atesting3
    command: >-
      /bin/sh -euxc "export APP_KEY=$$(php artisan key:generate --show --verbose) &&
      php artisan passport:keys --no-interaction --force &&
      touch /app/database/database.sqlite &&
      php artisan migrate --no-interaction &&
      php artisan tinker --no-interaction --verbose --execute \"(\\Laravel\\Passport\\Passport::client()->truncate())\" &&
      export PASSPORT_PERSONAL_ACCESS_CLIENT_SECRET=$$(php artisan tinker --no-interaction --verbose --execute \"echo ((new \\Laravel\\Passport\\ClientRepository())->createPersonalAccessClient(null, 'Personal Access Client', 'http://localhost'))->plainSecret\") &&
      export PASSPORT_PERSONAL_ACCESS_CLIENT_ID=$$(php artisan tinker --no-interaction --verbose --execute \"echo \\Laravel\\Passport\\Passport::client()->sole()->getKey()\") &&
      php artisan config:validate --no-interaction &&
      exec php artisan serve --host=0.0.0.0"

secrets:
  composer_auth:
    file: ~/.config/composer/auth.json
