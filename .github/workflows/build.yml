name: Build
on:
  - push
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: bcmath, ctype, curl, fileinfo, gd, intl, json, ldap, mbstring, mysqli, openssl, pdo, redis, sqlite3, tokenizer, uuid, xml, zip
          coverage: none
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ github.token }}

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Setup Composer cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        env:
          COMPOSER_AUTH: >-
            {"github-oauth":{"github.com":"${{ github.token }}"},"http-basic":{"nova.laravel.com":{"username":"${{ secrets.LARAVEL_NOVA_USERNAME }}","password":"${{ secrets.LARAVEL_NOVA_PASSWORD }}"}}}
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Run Pint
        run: vendor/bin/pint --test

      - name: Run PHPCS
        run: vendor/bin/phpcs .

      - name: Run PHPStan
        run: vendor/bin/phpstan analyze --level=max --configuration=phpstan.neon --error-format=github --no-progress .

      - name: Run Phan
        run: vendor/bin/phan --no-progress-bar --analyze-twice

      - name: Run Psalm
        run: vendor/bin/psalm --output-format=github --no-progress

      - name: Run Enlightn
        run: >-
          cp --verbose .env.example .env &&
          php artisan key:generate --no-interaction --verbose &&
          php artisan passport:keys --no-interaction --verbose &&
          php artisan enlightn --ci --details --show-exceptions --no-interaction --verbose

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: bcmath, ctype, curl, fileinfo, gd, intl, json, ldap, mbstring, mysqli, openssl, pdo, redis, sqlite3, tokenizer, uuid, xml, zip
          coverage: none
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ github.token }}

      - name: Install exiftool
        run: sudo apt-get install --assume-yes libimage-exiftool-perl

      - name: Prepare the environment
        run: cp .env.example .env

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Setup composer cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer dependencies
        env:
          COMPOSER_AUTH: >-
            {"github-oauth":{"github.com":"${{ github.token }}"},"http-basic":{"nova.laravel.com":{"username":"${{ secrets.LARAVEL_NOVA_USERNAME }}","password":"${{ secrets.LARAVEL_NOVA_PASSWORD }}"}}}
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate application key
        run: php artisan key:generate

      - name: Generate Passort keys
        run: php artisan passport:keys

      - name: Run tests
        run: php artisan test

  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Vale
        uses: errata-ai/vale-action@reviewdog
        working-directory: ./docs/
        with:
          fail_on_error: true
          token: ${{ github.token }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: poetry

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2

      - name: Install Poetry dependencies
        run: poetry install

      - name: Build Sphinx docs
        run: poetry run sphinx-build -M dirhtml . _build
